<?php

namespace TrocBundle\Repository;

/**
 * LivraisonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LivraisonRepository extends \Doctrine\ORM\EntityRepository
{
    public function AfficherLivraison()
    {
        $query = $this->getEntityManager()->createQuery("select c from AppBundle:User u ,TrocBundle:Livraison c where c.idclient=u.id and c.numcommande IS NOT NULL ") ;

        return $query->getResult();
    }
    public function AfficherClientLivraison()
    {
        $query = $this->getEntityManager()->createQuery(" select u.usernom,u.userprenom,u.useradresse,u.userphone from AppBundle:User u ,TrocBundle:Livraison c where c.idclient=u.id and c.numcommande IS NOT NULL ");
        return $query->getResult();
    }
    public function AfficherCoursierLivraison()
    {
    $query1= $this->getEntityManager()->createQuery(  " select u.usernom,u.userprenom from AppBundle:User u,TrocBundle:Livraison c where c.idcoursier=u.id and c.numcommande IS NOT NULL");

    return $query1->getResult();
    }
    public function ValiderLivraison($idlivraison)
    {
        $now  = date_create()->format('d-m-Y');
       $query1= $this->getEntityManager()->createQuery(  " UPDATE TrocBundle:Livraison l SET  l.livraisonrecue=1,l.datelivraison=$now  WHERE  l.idlivraison=$idlivraison");
       return $query1->getResult();
    }
    public function CancelLivraison($idlivraison)
    {
        $query1= $this->getEntityManager()->createQuery(  " UPDATE TrocBundle:Livraison l SET  l.etatlivraison=1  WHERE  l.idlivraison=$idlivraison");
        return $query1->getResult();
    }
    public function countLivraison()
    {
     $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as nb from TrocBundle:Livraison l, AppBundle:User u where l.idclient=u.id and l.numcommande IS NOT NULL ") ;
        return $query->getSingleResult();
    }
    public function AfficherAllo()
    {
        $query = $this->getEntityManager()->createQuery("select c from AppBundle:User u ,TrocBundle:Livraison c where c.idclient=u.id and c.numcommande IS NULL ") ;

        return $query->getResult();
    }
    public function AfficherAlloCoursier()
    {
        $query = $this->getEntityManager()->createQuery("select a from AppBundle:User u ,TrocBundle:Livraison l,TrocBundle:Allocoursier a where l.idclient=u.id and l.numal=a.idalloservice ") ;

        return $query->getResult();
    }
    public function AfficherClientAllocoursier()
    {
        $query = $this->getEntityManager()->createQuery(" select u.usernom,u.userprenom,u.useradresse,u.userphone from AppBundle:User u ,TrocBundle:Livraison c where c.idclient=u.id and c.numcommande IS NULL  ");
        return $query->getResult();
    }
    public function AfficherCoursierAllocoursier()
    {
        $query1= $this->getEntityManager()->createQuery(  " select u.usernom,u.userprenom from AppBundle:User u,TrocBundle:Livraison c where c.idcoursier=u.id and c.numcommande IS NULL ");

        return $query1->getResult();
    }
    public function countAllocoursier()
    {
        $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as nb from TrocBundle:Livraison l, AppBundle:User u where l.idclient=u.id and l.numcommande IS NULL ") ;
        return $query->getSingleResult();
    }
    public function countCoursier()
    {
        $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as cnb,u.usernom,u.userprenom,u.useradresse,u.userphone,u.usercin from TrocBundle:Livraison l, AppBundle:User u where l.idcoursier=u.id and l.etatlivraison=0 GROUP by l.idcoursier ORDER by cnb DESC ") ;
        return $query->getResult();
    }
    public function findCoursierLivraison($id)
    {
        $query=$this->getEntityManager()->createQuery(" select u.usernom,u.userprenom,u.useradresse,u.userphone from AppBundle:User u ,TrocBundle:Livraison c where c.idcoursier=$id  and c.etatlivraison=0 ");

        return $query->getResult();

    }
    public function countDate()
    {
        $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as cnb,l.dateenregistrement from TrocBundle:Livraison l where l.etatlivraison=0 GROUP by l.dateenregistrement ORDER by l.dateenregistrement ASC ") ;
        return $query->getResult();
    }
    public function countDateCanceled()
    {
        $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as nb,l.dateenregistrement from TrocBundle:Livraison l where l.etatlivraison=1 GROUP by l.dateenregistrement ORDER by l.dateenregistrement ASC ") ;
        return $query->getResult();
    }
    public function affectercoursier()
    {
        $query = $this->getEntityManager()->createQuery(" select  COUNT(l.idlivraison) as x ,u.id as id from  AppBundle:User u ,TrocBundle:Livraison l where l.idcoursier=u.id and l.etatlivraison=0  GROUP BY l.idcoursier ORDER by x ASC  ") ;
        return $query->getResult();
    }


}
